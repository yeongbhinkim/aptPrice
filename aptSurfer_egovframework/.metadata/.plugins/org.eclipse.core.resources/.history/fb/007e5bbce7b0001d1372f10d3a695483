<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dbvalley.premier.qms.prodquality.mapper.regularInspectionMapper">

	<!-- 품질보증 업무 매뉴얼 목록 조회 -->
	<select id="getInspectionList" parameterType="json" resultType="json">
		SELECT ROW_NUMBER() OVER(ORDER BY VENDCD, PARTNO) AS RNO
			,  COMPANYCD
			,  PLANT
			,  VENDCD
			,  PREMIER_SYS.GETCMPYNMBYCMPYSN(VENDCD) AS VENDNM
			,  PARTNO
			,  GET_PART_NAME(COMPANYCD, PARTNO) AS PARTNM
			,  YY
			,  KINDCD
			,  DECODE(X.M01, 'Y', DECODE( ( SELECT DECODE(YM, NULL, '1', NVL(PJ,'4')) 
                                    		FROM Q_251_INSPECTION
                                    		WHERE COMPANYCD = X.COMPANYCD
		                                    AND PLANT = X.PLANT
		                                    AND VENDCD = X.VENDCD
		                                    AND PARTNO = X.PARTNO
		                                    AND YY = X.YY
		                                    AND YM = #{stdyear}||'01'
		                                  ), NULL, '1', '0000001757', '2', '0000001757', '3', '4'), NULL) AS M01
			,  DECODE(X.M02, 'Y', DECODE( ( SELECT DECODE(YM, NULL, '1', NVL(PJ,'4')) 
                                    		FROM Q_251_INSPECTION
                                    		WHERE COMPANYCD = X.COMPANYCD
		                                    AND PLANT = X.PLANT
		                                    AND VENDCD = X.VENDCD
		                                    AND PARTNO = X.PARTNO
		                                    AND YY = X.YY
		                                    AND YM = #{stdyear}||'02'
		                                  ), NULL, '1', '0000001757', '2', '0000001757', '3', '4'), NULL) AS M02
			,  DECODE(X.M03, 'Y', DECODE( ( SELECT DECODE(YM, NULL, '1', NVL(PJ,'4')) 
                                    		FROM Q_251_INSPECTION
                                    		WHERE COMPANYCD = X.COMPANYCD
		                                    AND PLANT = X.PLANT
		                                    AND VENDCD = X.VENDCD
		                                    AND PARTNO = X.PARTNO
		                                    AND YY = X.YY
		                                    AND YM = #{stdyear}||'03'
		                                  ), NULL, '1', '0000001757', '2', '0000001757', '3', '4'), NULL) AS M03
			,  DECODE(X.M04, 'Y', DECODE( ( SELECT DECODE(YM, NULL, '1', NVL(PJ,'4')) 
                                    		FROM Q_251_INSPECTION
                                    		WHERE COMPANYCD = X.COMPANYCD
		                                    AND PLANT = X.PLANT
		                                    AND VENDCD = X.VENDCD
		                                    AND PARTNO = X.PARTNO
		                                    AND YY = X.YY
		                                    AND YM = #{stdyear}||'04'
		                                  ), NULL, '1', '0000001757', '2', '0000001757', '3', '4'), NULL) AS M04
			,  DECODE(X.M05, 'Y', DECODE( ( SELECT DECODE(YM, NULL, '1', NVL(PJ,'4')) 
                                    		FROM Q_251_INSPECTION
                                    		WHERE COMPANYCD = X.COMPANYCD
		                                    AND PLANT = X.PLANT
		                                    AND VENDCD = X.VENDCD
		                                    AND PARTNO = X.PARTNO
		                                    AND YY = X.YY
		                                    AND YM = #{stdyear}||'05'
		                                  ), NULL, '1', '0000001757', '2', '0000001757', '3', '4'), NULL) AS M05
			,  DECODE(X.M06, 'Y', DECODE( ( SELECT DECODE(YM, NULL, '1', NVL(PJ,'4')) 
                                    		FROM Q_251_INSPECTION
                                    		WHERE COMPANYCD = X.COMPANYCD
		                                    AND PLANT = X.PLANT
		                                    AND VENDCD = X.VENDCD
		                                    AND PARTNO = X.PARTNO
		                                    AND YY = X.YY
		                                    AND YM = #{stdyear}||'06'
		                                  ), NULL, '1', '0000001757', '2', '0000001757', '3', '4'), NULL) AS M06
			,  DECODE(X.M07, 'Y', DECODE( ( SELECT DECODE(YM, NULL, '1', NVL(PJ,'4')) 
                                    		FROM Q_251_INSPECTION
                                    		WHERE COMPANYCD = X.COMPANYCD
		                                    AND PLANT = X.PLANT
		                                    AND VENDCD = X.VENDCD
		                                    AND PARTNO = X.PARTNO
		                                    AND YY = X.YY
		                                    AND YM = #{stdyear}||'07'
		                                  ), NULL, '1', '0000001757', '2', '0000001757', '3', '4'), NULL) AS M07
			,  DECODE(X.M08, 'Y', DECODE( ( SELECT DECODE(YM, NULL, '1', NVL(PJ,'4')) 
                                    		FROM Q_251_INSPECTION
                                    		WHERE COMPANYCD = X.COMPANYCD
		                                    AND PLANT = X.PLANT
		                                    AND VENDCD = X.VENDCD
		                                    AND PARTNO = X.PARTNO
		                                    AND YY = X.YY
		                                    AND YM = #{stdyear}||'08'
		                                  ), NULL, '1', '0000001757', '2', '0000001757', '3', '4'), NULL) AS M08
			,  DECODE(X.M09, 'Y', DECODE( ( SELECT DECODE(YM, NULL, '1', NVL(PJ,'4')) 
                                    		FROM Q_251_INSPECTION
                                    		WHERE COMPANYCD = X.COMPANYCD
		                                    AND PLANT = X.PLANT
		                                    AND VENDCD = X.VENDCD
		                                    AND PARTNO = X.PARTNO
		                                    AND YY = X.YY
		                                    AND YM = #{stdyear}||'09'
		                                  ), NULL, '1', '0000001757', '2', '0000001757', '3', '4'), NULL) AS M09
			,  DECODE(X.M10, 'Y', DECODE( ( SELECT DECODE(YM, NULL, '1', NVL(PJ,'4')) 
                                    		FROM Q_251_INSPECTION
                                    		WHERE COMPANYCD = X.COMPANYCD
		                                    AND PLANT = X.PLANT
		                                    AND VENDCD = X.VENDCD
		                                    AND PARTNO = X.PARTNO
		                                    AND YY = X.YY
		                                    AND YM = #{stdyear}||'10'
		                                  ), NULL, '1', '0000001757', '2', '0000001757', '3', '4'), NULL) AS M10
			,  DECODE(X.M11, 'Y', DECODE( ( SELECT DECODE(YM, NULL, '1', NVL(PJ,'4')) 
                                    		FROM Q_251_INSPECTION
                                    		WHERE COMPANYCD = X.COMPANYCD
		                                    AND PLANT = X.PLANT
		                                    AND VENDCD = X.VENDCD
		                                    AND PARTNO = X.PARTNO
		                                    AND YY = X.YY
		                                    AND YM = #{stdyear}||'11'
		                                  ), NULL, '1', '0000001757', '2', '0000001757', '3', '4'), NULL) AS M11
			,  DECODE(X.M12, 'Y', DECODE( ( SELECT DECODE(YM, NULL, '1', NVL(PJ,'4')) 
                                    		FROM Q_251_INSPECTION
                                    		WHERE COMPANYCD = X.COMPANYCD
		                                    AND PLANT = X.PLANT
		                                    AND VENDCD = X.VENDCD
		                                    AND PARTNO = X.PARTNO
		                                    AND YY = X.YY
		                                    AND YM = #{stdyear}||'12'
		                                  ), NULL, '1', '0000001757', '2', '0000001757', '3', '4'), NULL) AS M12
		FROM Q_550 X
		WHERE COMPANYCD = #{cmpysn}
		AND PLANT = #{plantcd}
		AND YY = #{stdyear}
		AND PREMIER_SYS.GETCMPYNMBYCMPYSN(VENDCD) LIKE '%'||#{partner}||'%'
		AND PARTNO LIKE '%'||#{partno}||'%'
		AND X.VENDCD = DECODE(#{LOGINCOMPTYPE},'A',X.VENDCD,'B',#{ACCNO})
		<if test="KINDCD != null and KINDCD != ''">
		  	AND KINDCD = #{KINDCD}
	  	</if>
	</select>
	
	<!-- 게이지R&R 계획등록 조회 -->
	<select id="getInspectionPlanList" parameterType="json" resultType="json">
		SELECT ROWNUM
		      ,A.COMPANYCD
		      ,A.PLANT
		      ,A.VENDCD
		      ,PREMIER_SYS.GETCMPYNMBYCMPYSN(A.VENDCD) AS VENDNM
		      ,A.PARTNO
		      ,A.PARTNM
		      ,A.KINDCD
		      ,'N' IS_EDIT
		      ,#{YY} YY 
		      ,NVL(B.M01, 'N') AS M01
		      ,NVL(B.M02, 'N') AS M02
		      ,NVL(B.M03, 'N') AS M03
		      ,NVL(B.M04, 'N') AS M04
		      ,NVL(B.M05, 'N') AS M05
		      ,NVL(B.M06, 'N') AS M06
		      ,NVL(B.M07, 'N') AS M07
		      ,NVL(B.M08, 'N') AS M08
		      ,NVL(B.M09, 'N') AS M09
		      ,NVL(B.M10, 'N') AS M10
		      ,NVL(B.M11, 'N') AS M11
		      ,NVL(B.M12, 'N') AS M12
		FROM ( SELECT *
		       FROM Q_251 X
		       WHERE REV_NO = ( SELECT MAX(REV_NO)
		                        FROM Q_251
		                        WHERE COMPANYCD = X.COMPANYCD
		                        AND PLANT = X.PLANT
		                        AND VENDCD = X.VENDCD
		                        AND PARTNO = X.PARTNO
		                      )
		     ) A, 
		     ( SELECT *
		       FROM Q_550
		       WHERE YY = #{YY}
		     ) B
		WHERE A.COMPANYCD = B.COMPANYCD(+)
		AND A.PLANT = B.PLANT(+)
		AND A.VENDCD = B.VENDCD(+)
		AND A.PARTNO = B.PARTNO(+)
		AND A.COMPANYCD = #{COMPANYCD}
		AND A.PLANT = #{PLANT}
		AND PREMIER_SYS.GETCMPYNMBYCMPYSN(A.VENDCD) LIKE '%'||#{VEND}||'%'
		AND A.VENDCD = DECODE(#{LOGINCOMPTYPE},'A',A.VENDCD,'B',#{ACCNO})
		AND A.PARTNO LIKE '%'||#{PART}||'%'
		<if test="KINDCD != null and KINDCD != ''">
		  	AND A.KINDCD = #{KINDCD}
	  	</if>
	</select>
	
	<update id="saveInspectionPlanList" parameterType="json">
		MERGE INTO Q_550 A USING (
			SELECT #{COMPANYCD} AS COMPANYCD
				 , #{PLANT} AS PLANT
				 , #{VENDCD} AS VENDCD
				 , #{PARTNO} AS PARTNO
				 , #{YY} AS YY
				 , #{M01} AS M01
				 , #{M02} AS M02
				 , #{M03} AS M03
				 , #{M04} AS M04
				 , #{M05} AS M05
				 , #{M06} AS M06
				 , #{M07} AS M07
				 , #{M08} AS M08
				 , #{M09} AS M09
				 , #{M10} AS M10
				 , #{M11} AS M11
				 , #{M12} AS M12
				 , #{KINDCD} AS KINDCD
				 , #{LOGIN_COMPANYCD} AS LOGIN_COMPANYCD
				 , #{LOGIN_ID} AS LOGIN_ID
				 , SYSDATE AS LOGIN_YMD
			  FROM DUAL ) D
		   ON (A.COMPANYCD = D.COMPANYCD AND A.PLANT = D.PLANT AND A.VENDCD = D.VENDCD AND A.PARTNO = D.PARTNO AND A.YY = D.YY )
		 WHEN MATCHED THEN
		 	UPDATE SET A.M01 = D.M01
					 , A.M02 = D.M02
					 , A.M03 = D.M03
					 , A.M04 = D.M04
					 , A.M05 = D.M05
					 , A.M06 = D.M06
					 , A.M07 = D.M07
					 , A.M08 = D.M08
					 , A.M09 = D.M09
					 , A.M10 = D.M10
					 , A.M11 = D.M11
					 , A.M12 = D.M12
					 , A.KINDCD = D.KINDCD
					 , A.LOGIN_COMPANYCD = D.LOGIN_COMPANYCD
		             , A.LOGIN_ID = D.LOGIN_ID
		             , A.LOGIN_YMD = D.LOGIN_YMD
		 WHEN NOT MATCHED THEN
		 	INSERT (A.COMPANYCD, A.PLANT, A.VENDCD, A.PARTNO, A.YY, A.M01, A.M02, A.M03, A.M04, A.M05, A.M06, A.M07, A.M08, A.M09, A.M10, A.M11, A.M12,
					A.KINDCD, A.LOGIN_COMPANYCD, A.LOGIN_ID, A.LOGIN_YMD)
		 	VALUES (D.COMPANYCD, D.PLANT, D.VENDCD, D.PARTNO, D.YY, D.M01, D.M02, D.M03, D.M04, D.M05, D.M06, D.M07, D.M08, D.M09, D.M10, D.M11, D.M12,
					D.KINDCD, D.LOGIN_COMPANYCD, D.LOGIN_ID, D.LOGIN_YMD)
	</update>
	
	<select id="getRevNo" parameterType="json" resultType="json">
		SELECT A.REV_NO, NVL(B.REV_NO,0) AS REV_NO_INSPECTION
		FROM Q_251 A, ( SELECT *
						FROM Q_251_INSPECTION
						WHERE YY = #{YY}
						AND YM = #{YM}
					  ) B
		WHERE A.COMPANYCD = B.COMPANYCD(+)
		AND A.PLANT = B.PLANT(+)
		AND A.VENDCD = B.VENDCD(+)
		AND A.PARTNO = B.PARTNO(+)
		AND A.COMPANYCD = #{COMPANYCD}
		AND A.PLANT = #{PLANT}
		AND A.VENDCD = #{VENDCD}
		AND A.PARTNO = #{PARTNO}
		AND SUBSTR(A.SDATE,1,6) <![CDATA[<=]]> #{YM}
		AND A.REV_NO = ( SELECT MAX(REV_NO)
		                 FROM Q_251
		                 WHERE COMPANYCD = A.COMPANYCD
		                 AND PLANT = A.PLANT
		                 AND VENDCD = A.VENDCD
		                 AND PARTNO = A.PARTNO)
	</select>
	
	<select id="getCmpltRegistInfo" parameterType="json" resultType="json">
		SELECT X.COMPANYCD AS COMPANYCD
			,  X.PLANT AS PLANT
			,  X.VENDCD AS VENDCD
			,  PREMIER_SYS.GETCMPYNMBYCMPYSN(X.VENDCD) AS VENDNM
			,  X.PARTNO AS PARTNO
			,  X.REV_NO AS REV_NO
			,  X.SDATE AS SDATE
			,  X.KINDCD AS KINDCD
			,  X.PARTNM AS PARTNM
			,  X.GRADE AS GRADE
			,  X.IRE AS IRE
			,  X.EO_NO AS EO_NO
			,  TO_CHAR(TO_DATE(X.EO_DATE),'YYYY-MM-DD') AS EO_DATE
			,  X.CAVITY AS CAVITY
			,  ( CASE WHEN SDATE IS NULL THEN ''
					  WHEN EDATE IS NULL THEN TO_CHAR(TO_DATE(SDATE),'YYYY-MM-DD')||' ~ 검사지정 해제시까지'
			   	 ELSE TO_CHAR(TO_DATE(SDATE),'YYYY-MM-DD')||' ~ '||TO_CHAR(TO_DATE(EDATE),'YYYY-MM-DD') 
			   	 END
			   ) AS INSP_PERI
		    ,  #{YY} AS YY
		    ,  #{YM} AS YM
		    ,  TO_CHAR(TO_DATE(P_YMD),'YYYY-MM-DD') AS P_YMD
		    ,  SUPP_A
		    ,  SUPP_B
		    ,  SUPP_C
		    ,  K_A
		    ,  K_B
		    ,  K_C
		    ,  LOT_NO
		    ,  APRV_ITEM 
		    ,  PJ
		    ,  DESCR
		    ,  INSPECTION_USER
		    ,  GETNAMEBYACCNO(INSPECTION_USER) INSPECTION_USERNM
		FROM Q_251 X, ( SELECT *
						FROM Q_251_INSPECTION
						WHERE YY = #{YY}
						AND YM = #{YM}
					  ) Y
		WHERE 1=1
		AND   (
		        (#{REV_NO_INSPECTION} != '0' AND X.REV_NO = #{REV_NO} ) OR
		        (#{REV_NO_INSPECTION} = '0' AND  X.REV_NO = ( SELECT MAX(REV_NO)
			                                       	FROM Q_251
			                                       	WHERE COMPANYCD = X.COMPANYCD
			                                       	AND   PLANT = X.PLANT
			                                       	AND   VENDCD = X.VENDCD
			                                       	AND   PARTNO = X.PARTNO
			                                       	AND   SUBSTR(SDATE,1,6) <![CDATA[<=]]> #{YM} 
		                                     	  ))
		      )
		AND X.COMPANYCD = Y.COMPANYCD(+)
		AND X.PLANT = Y.PLANT(+)
		AND X.VENDCD = Y.VENDCD(+)
		AND X.PARTNO = Y.PARTNO(+)
		AND X.COMPANYCD = #{COMPANYCD}
		AND X.PLANT = #{PLANT}
		AND X.VENDCD = #{VENDCD}
		AND X.PARTNO = #{PARTNO}
	</select>
	
	<!-- 수입검사 성적서(갑) 검토,승인자 리스트 조회 -->	 
	<select id="getCmpltApprList" parameterType="json" resultType="json">
		SELECT A.CODE_NAME AS EXAM_USER
		     , B.S1 AS S1
		     , B.S2 AS S2
		     , B.S3 AS S3
		FROM (
		      SELECT X.CODE_ORDERNO, Y.*
		      FROM SYS_ITGR_CODE_MGMT X, SYS_ITGR_CODE_LANG Y
		      WHERE X.CODE_SEQ = Y.CODE_SEQ
		      AND   X.CODE_SEQ_UP = '0000003304'
		      AND   Y.CODE_SEQ_LANG = #{LANG}
		     ) A, ( SELECT *
		            FROM V_Q_251_INSPECTION
		            WHERE 1=1
		            AND   COMPANYCD = #{COMPANYCD}
		            AND   PLANT = #{PLANT}
		            AND   VENDCD = #{VENDCD}
		            AND   PARTNO = #{PARTNO}
		            AND   YY = #{YY}
		            AND   YM = #{YM}
		          ) B
		WHERE A.CODE_SEQ = B.CODE_SEQ(+)
		ORDER BY A.CODE_ORDERNO 
	</select>
	
	<!-- 수입검사 성적서(을) 검사항목 리스트 조회 -->	 
	<select id="getCmpltCheckList" parameterType="hashmap" resultType="hashmap">
		SELECT ROWNUM AS RNO, 
		       #{CAVITY} AS CAVITY,
		       #{CAVITY_IDX} AS CAVITY_IDX,
		       D.*
		FROM ( 
			SELECT C.*
			FROM (    
		    	SELECT A.SEQ
		          	  ,A.COMPANYCD
		          	  ,A.PLANT
		          	  ,A.VENDCD
		          	  ,A.PARTNO
		          	  ,A.REV_NO
		          	  ,A.SNO
		          	  ,A.MGR_CLASS
		          	  ,PREMIER_SYS.GET_ITGR_CODE_NAME(A.MGR_CLASS, #{LANG}) AS MGR_CLASS_NM
		          	  ,A.ITEM
		          	  ,A.STANDARD
		          	  ,A.MTH
		          	  ,A.SPEC_MIN
		          	  ,A.SPEC_MAX
		          	  ,A.MGT_SPEC_MIN
		          	  ,A.MGT_SPEC_MAX
		          	  ,A.INSP_QTY
		          	  ,B.YY
		          	  ,B.YM 
		          	  ,'0000003305' AS EXAM_USER_CODE
		          	  ,'공급자' AS EXAM_USER    
		          	  ,B.SX1 AS X1
		          	  ,B.SX2 AS X2
		          	  ,B.SX3 AS X3
		          	  ,B.SX4 AS X4
		          	  ,B.SX5 AS X5
		          	  ,( CASE WHEN B.SDECGBN = '0000001757' THEN '합격'
							  WHEN B.SDECGBN = '0000001758' THEN '불합격'
		                  	  ELSE '' 
		             	 END ) AS DECGBN
		    	FROM Q_252 A, ( SELECT * 
		                    	FROM Q_252_INSPECTION 
		                    	WHERE YY = #{YY}
		                    	AND YM = #{YM} 
		                    	AND CAVITY = #{CAVITY_IDX}
							  ) B
		    	WHERE A.COMPANYCD = #{COMPANYCD}
			    AND A.PLANT = #{PLANT}
			    AND A.PARTNO = #{PARTNO}
			    AND A.VENDCD = #{VENDCD}
			    AND A.REV_NO = #{REV_NO}
			    AND A.COMPANYCD = B.COMPANYCD(+)
			    AND A.PLANT = B.PLANT(+)
			    AND A.PARTNO = B.PARTNO(+)
			    AND A.VENDCD = B.VENDCD(+)
			    AND A.SEQ = B.SEQ(+)
			 UNION ALL
		    SELECT A.SEQ
	        	  ,A.COMPANYCD
	          	  ,A.PLANT
	          	  ,A.VENDCD
	          	  ,A.PARTNO
	          	  ,A.REV_NO
	          	  ,A.SNO
	          	  ,A.MGR_CLASS
	          	  ,PREMIER_SYS.GET_ITGR_CODE_NAME(A.MGR_CLASS, #{LANG}) AS MGR_CLASS_NM
	          	  ,A.ITEM
	          	  ,A.STANDARD
	          	  ,A.MTH
	          	  ,A.SPEC_MIN
	          	  ,A.SPEC_MAX
	          	  ,A.MGT_SPEC_MIN
	          	  ,A.MGT_SPEC_MAX
	          	  ,A.INSP_QTY
	          	  ,B.YY
	          	  ,B.YM 
	          	  ,'0000003306' AS EXAM_USER_CODE
	          	  ,'수요자' AS EXAM_USER    
	          	  ,B.CX1 AS X1
	          	  ,B.CX2 AS X2
	          	  ,B.CX3 AS X3
	          	  ,B.CX4 AS X4
	          	  ,B.CX5 AS X5
	              ,( CASE WHEN B.CDECGBN = '0000001757' THEN '합격'
						  WHEN B.CDECGBN = '0000001758' THEN '불합격'
	                  	  ELSE '' 
	             	 END ) AS DECGBN
	    	FROM Q_252 A, ( SELECT * 
	                    	FROM Q_252_INSPECTION 
	                    	WHERE YY = #{YY}
	                    	AND YM = #{YM} 
	                    	AND CAVITY = #{CAVITY_IDX}
						  ) B
	    	WHERE A.COMPANYCD = #{COMPANYCD}
		    AND A.PLANT = #{PLANT}
		    AND A.PARTNO = #{PARTNO}
		    AND A.VENDCD = #{VENDCD}
		    AND A.REV_NO = #{REV_NO}
		    AND A.COMPANYCD = B.COMPANYCD(+)
		    AND A.PLANT = B.PLANT(+)
		    AND A.PARTNO = B.PARTNO(+)
		    AND A.VENDCD = B.VENDCD(+)
		    AND A.SEQ = B.SEQ(+)
			) C
		) D
	</select>
	
	<!-- 수입검사 실적 저장 -->
	<update id="saveCmpltRegistInfo" parameterType="json">
		MERGE INTO Q_251_INSPECTION A USING(
		    SELECT  #{COMPANYCD}  		AS COMPANYCD
	               ,#{PLANT}	  		AS PLANT
	               ,#{VENDCD}	  		AS VENDCD
	               ,#{PARTNO}			AS PARTNO
	               ,#{YY}				AS YY
	               ,#{YM}				AS YM
	               ,#{REV_NO}			AS REV_NO
	               ,#{SUPP_A}	  		AS SUPP_A
	               ,#{SUPP_B}	  		AS SUPP_B
	               ,#{SUPP_C}	  		AS SUPP_C
	               ,#{K_A}		  		AS K_A
	               ,#{K_B}		  		AS K_B
	               ,#{K_C}		  		AS K_C
	               ,#{LOT_NO}	  		AS LOT_NO
	               ,#{APRV_ITEM} 		AS APRV_ITEM
	               ,#{PJ}		  		AS PJ
	               ,#{DESCR}	  		AS DESCR
		           ,#{P_YMD}			AS P_YMD
		           ,#{INSPECTION_USER}  AS INSPECTION_USER
		           ,#{LOGIN_COMPANYCD}	AS LOGIN_COMPANYCD
		           ,#{LOGIN_ID}	  		AS LOGIN_ID
		           ,SYSDATE	  			AS LOGIN_YMD 
	      	FROM DUAL
	    ) D
		ON (A.COMPANYCD = D.COMPANYCD AND A.PLANT = D.PLANT AND A.PARTNO = D.PARTNO AND A.VENDCD = D.VENDCD AND A.YY = D.YY AND A.YM = D.YM   )
		WHEN MATCHED THEN
		    UPDATE SET  A.SUPP_A          = D.SUPP_A
		    		   ,A.SUPP_B          = D.SUPP_B
		    		   ,A.SUPP_C          = D.SUPP_C
		    		   ,A.K_A             = D.K_A
		    		   ,A.K_B             = D.K_B
		    		   ,A.K_C             = D.K_C
		    		   ,A.LOT_NO          = D.LOT_NO
		    		   ,A.APRV_ITEM       = D.APRV_ITEM
		    		   ,A.PJ              = D.PJ
		    		   ,A.DESCR           = D.DESCR 
		    		   ,A.P_YMD      	  = D.P_YMD
		    		   ,A.INSPECTION_USER = D.INSPECTION_USER
		    		   ,A.LOGIN_COMPANYCD = D.LOGIN_COMPANYCD
		    		   ,A.LOGIN_ID        = D.LOGIN_ID
		    		   ,A.LOGIN_YMD       = D.LOGIN_YMD
		WHEN NOT MATCHED THEN
		    INSERT ( A.COMPANYCD, A.PLANT, A.VENDCD, A.PARTNO, A.YY, A.YM, A.REV_NO, A.SUPP_A, A.SUPP_B, A.SUPP_C, A.K_A, A.K_B, A.K_C, 
		    		 A.LOT_NO, A.APRV_ITEM, A.PJ, A.DESCR, A.LOGIN_COMPANYCD, A.LOGIN_ID, A.LOGIN_YMD, A.P_YMD, A.INSPECTION_USER )
		    VALUES ( D.COMPANYCD, D.PLANT, D.VENDCD, D.PARTNO, D.YY, D.YM, D.REV_NO, D.SUPP_A, D.SUPP_B, D.SUPP_C, D.K_A, D.K_B, D.K_C, 
		    		 D.LOT_NO, D.APRV_ITEM, D.PJ, D.DESCR, D.LOGIN_COMPANYCD, D.LOGIN_ID, D.LOGIN_YMD, D.P_YMD, D.INSPECTION_USER )
	</update> 
	
	<!-- 수입검사 실적정보(갑) 삭제  -->
	<delete id="deleteCmpltRegistInfo" parameterType="hashmap"> 
		DELETE 
		FROM Q_251_INSPECTION 
		WHERE COMPANYCD = #{COMPANYCD}
		AND PLANT = #{PLANT}
		AND PARTNO = #{PARTNO}
		AND VENDCD = #{VENDCD}
		AND YY = #{YY}
		AND YM = #{YM}
	</delete>
	
	<!-- 수입검사 실적정보(을) 삭제  -->
	<delete id="deleteCmpltSubRegistInfo" parameterType="json"> 
		DELETE 
		FROM Q_252_INSPECTION
		WHERE COMPANYCD = #{COMPANYCD}
	  	AND PLANT = #{PLANT}
	  	AND PARTNO = #{PARTNO}
	  	AND VENDCD = #{VENDCD}
	  	AND YY = #{YY}
	  	AND YM = #{YM}
	</delete>
	
	<update id="insertEstiItemInfo" parameterType="json">
		MERGE INTO Q_252_INSPECTION A USING(
	 		SELECT   #{COMPANYCD} 				AS COMPANYCD
					,#{PLANT}	  				AS PLANT  
					,#{VENDCD}	  				AS VENDCD 
					,#{PARTNO}	  				AS PARTNO 
					,#{YY}		  				AS YY 
					,#{YM}	  					AS YM
					,#{CAVITY_IDX}				AS CAVITY 
					,#{SEQ}		  				AS SEQ
					,#{SDECGBN}	  				AS SDECGBN
					,#{SX1}		  AS SX1
					,#{SX2}		  AS SX2
					,#{SX3}		  AS SX3
					,#{SX4}		  AS SX4
					,#{SX5}		  AS SX5
					,#{CX1}		  AS CX1
					,#{CX2}		  AS CX2
					,#{CX3}		  AS CX3
					,#{CX4}		  AS CX4
					,#{CX5}		  AS CX5
					,#{CDECGBN}	  				AS CDECGBN
					,#{LOGIN_COMPANYCD}			AS LOGIN_COMPANYCD
					,#{LOGIN_ID}				AS LOGIN_ID
					,SYSDATE					AS LOGIN_YMD
		 	FROM DUAL
	    ) D
		ON 
		( A.COMPANYCD = D.COMPANYCD AND A.PLANT = D.PLANT AND A.VENDCD = D.VENDCD AND A.PARTNO = D.PARTNO AND A.YY = D.YY AND A.YM = D.YM AND A.CAVITY = D.CAVITY AND A.SEQ = D.SEQ	      
		)
		WHEN MATCHED THEN
			UPDATE SET 	 A.SX1			   = D.SX1
			    		,A.SX2			   = D.SX2
		    			,A.SX3			   = D.SX3
			    		,A.SX4			   = D.SX4
		    			,A.SX5			   = D.SX5
		    			,A.CX1			   = D.CX1
			    		,A.CX2			   = D.CX2
		    			,A.CX3			   = D.CX3
			    		,A.CX4			   = D.CX4
		    			,A.CX5			   = D.CX5
		    			,A.SDECGBN		   = D.SDECGBN
			    		,A.CDECGBN		   = D.CDECGBN
		    			,A.LOGIN_COMPANYCD = D.LOGIN_COMPANYCD
			    		,A.LOGIN_ID		   = D.LOGIN_ID
			    		,A.LOGIN_YMD	   = D.LOGIN_YMD
		WHEN NOT MATCHED THEN
		    INSERT ( A.COMPANYCD, A.PLANT, A.VENDCD, A.PARTNO, A.YY, A.YM, A.CAVITY, A.SEQ, A.SX1, A.SX2, A.SX3, A.SX4, A.SX5, A.CX1, A.CX2, A.CX3, A.CX4, A.CX5,
					 A.SDECGBN, A.CDECGBN, A.LOGIN_COMPANYCD, A.LOGIN_ID, A.LOGIN_YMD )
		    VALUES ( D.COMPANYCD, D.PLANT, D.VENDCD, D.PARTNO, D.YY, D.YM, D.CAVITY, D.SEQ, D.SX1, D.SX2, D.SX3, D.SX4, D.SX5, D.CX1, D.CX2, D.CX3, D.CX4, D.CX5,
					 D.SDECGBN, D.CDECGBN, D.LOGIN_COMPANYCD, D.LOGIN_ID, D.LOGIN_YMD )
	</update>
	
	<!-- 계획복사 -->
	<update id="savePlanCopy" parameterType="json">	
		MERGE INTO Q_550 A USING(
			SELECT *
			FROM Q_550
			WHERE COMPANYCD = #{cmpysn}
			AND PLANT = #{plantcd}
			AND YY = #{SRC_YY}
			AND PREMIER_SYS.GETCMPYNMBYCMPYSN(VENDCD) LIKE '%'||#{partner}||'%'
			AND PARTNO LIKE '%'||#{partno}||'%'
		) D
		ON ( A.COMPANYCD = D.COMPANYCD AND A.PLANT = D.PLANT AND A.VENDCD = D.VENDCD AND A.PARTNO = D.PARTNO AND A.YY = #{OBJ_YY} )
        WHEN MATCHED THEN
			UPDATE SET   A.M01             = D.M01      
						,A.M02             = D.M02      
						,A.M03             = D.M03      
						,A.M04             = D.M04      
						,A.M05             = D.M05      
						,A.M06             = D.M06      
						,A.M07             = D.M07      
						,A.M08             = D.M08      
						,A.M09             = D.M09      
						,A.M10             = D.M10      
						,A.M11             = D.M11      
						,A.M12             = D.M12    
						,A.LOGIN_COMPANYCD = #{LOGIN_COMPANYCD}     
						,A.LOGIN_ID        = #{LOGIN_ID}   
						,A.LOGIN_YMD       = SYSDATE    
		WHEN NOT MATCHED THEN
			INSERT ( A.COMPANYCD, A.PLANT, A.VENDCD, A.PARTNO, A.YY, A.M01, A.M02, A.M03, A.M04, A.M05, A.M06, A.M07, A.M08, A.M09, A.M10, A.M11, A.M12,
					 A.LOGIN_COMPANYCD, A.LOGIN_ID, A.LOGIN_YMD)
           	VALUES ( D.COMPANYCD, D.PLANT, D.VENDCD, D.PARTNO, #{OBJ_YY}, D.M01, D.M02, D.M03, D.M04, D.M05, D.M06, D.M07, D.M08, D.M09, D.M10, D.M11, D.M12,
					 #{LOGIN_COMPANYCD}, #{LOGIN_ID}, SYSDATE)
	</update>
	
	<select id="getPjInfo" parameterType="json" resultType="json">
		SELECT CASE WHEN SB_CNT = 0 AND CB_CNT = 0 THEN 
					CASE WHEN CNT = S_CNT AND CNT = C_CNT THEN 'Y' 
						ELSE 'N' 
					END
		       ELSE 'D' END CHK 
		FROM (
			SELECT COUNT(*) CNT
				  ,SUM(DECODE(SDECGBN, '0000001757',1, 0)) S_CNT
				  ,SUM(DECODE(CDECGBN, '0000001757',1, 0)) C_CNT
				  ,SUM(DECODE(SDECGBN, '0000001758',1, 0)) SB_CNT
				  ,SUM(DECODE(CDECGBN, '0000001758',1, 0)) CB_CNT
		  	FROM Q_252_INSPECTION
		  	WHERE COMPANYCD = #{COMPANYCD}
		  	AND PLANT = #{PLANT}
		  	AND VENDCD = #{VENDCD}
		  	AND PARTNO = #{PARTNO}
		  	AND YY = #{YY}
		  	AND YM = #{YM}
		)
	</select>
	
</mapper>
	