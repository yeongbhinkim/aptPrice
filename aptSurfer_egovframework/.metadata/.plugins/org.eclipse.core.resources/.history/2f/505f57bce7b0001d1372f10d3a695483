<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dbvalley.premier.qms.common.mapper.QmsCommonMapper">
	<!-- 메시지 조회 -->
	<select id="selectMessage" parameterType="json" resultType="string">
		SELECT B.MESSAGE 
		  FROM SYS_MESSAGECODE A, SYS_MESSAGE B
		 WHERE A.MESSAGECODE = B.MESSAGECODE
		   AND B.LANG = #{lang}
		   AND A.MESSAGECODE = #{MESSAGECODE}
	</select>
	<!-- 품목마스터 목록 조회 -->
	<select id="selectPartMasterList" parameterType="hashmap" resultType="hashmap">
		SELECT  COMPANYCD, APNO, APNONM, MATERCD, APNOGBN, ITEM, ATTR1, ATTR2, DESCR, USEYN, NVL(KINDCD,'N/A') AS KINDCD,
				GET_KIND_NAME(COMPANYCD, KINDCD) KINDNM  
		FROM	XM010
		WHERE	COMPANYCD = #{COMPANYCD} 
		ORDER BY APNO, APNONM 
	</select>
	<!-- QMS 품목 조회 (회사코드로 비용조회) -->
	<select id="selectQMSPartListToCost" parameterType="json" resultType="json">
		SELECT ROWNUM AS NO, R.* 
		  FROM (SELECT T1.APNO, T1.APNONM, T1.KINDCD, T2.UNIT, T2.CURRENCY, T2.LIFNR, T2.PLANT, T2.S_UNIT, T2.S_CURRENCY,
		               (SELECT KINDCD || ' - ' || KINDNM || ' (' || DESCR || ')' 
		                  FROM XM000 
		                 WHERE KINDCD = T1.KINDCD) AS KIND_INFO 
		          FROM PREMIER_QMS.XM010 T1, PREMIER_QMS.XM010_COST T2
		         WHERE T1.APNO = T2.APNO
		           AND T1.USEYN = 'Y'
		           AND T2.PLANT = #{PLANT}
		           AND UPPER(T1.APNO) LIKE '%'||UPPER(#{APNO})||'%'
		           AND UPPER(T1.APNONM) LIKE '%'||UPPER(#{APNONM})||'%'
		         ORDER BY T1.APNO, T1.APNONM
		) R
	</select>
	<!-- QMS 차종 조히 -->
	<select id="selectQMSKindList" parameterType="json" resultType="json">
		SELECT ROWNUM as no, KIND_CD AS "id", KIND_NM || ' (' || DESCR || ')' AS "content", KIND_CD, KIND_NM, DESCR FROM COM_CAR_MST WHERE 1=1 
	</select>
	<!-- QMS 품목 조회 -->
	<select id="selectQMSPartList" parameterType="json" resultType="json">
		<!--  
		SELECT ROWNUM AS NO, R.* 
          FROM (SELECT T1.APNO, T1.APNONM, T1.KINDCD, T1.UNIT, T1.CURRENCY, T1.LIFNR, T1.PLANT, T1.S_UNIT, T1.S_CURRENCY, T1.ITEM,
                       (SELECT KINDCD || ' - ' || KINDNM || ' (' || DESCR || ')' 
                          FROM XM000 
                         WHERE KINDCD = T1.KINDCD) AS KIND_INFO 
                  FROM PREMIER_QMS.XM010 T1
                 WHERE T1.USEYN = 'Y'
                   AND UPPER(T1.APNO) LIKE '%'||UPPER(#{APNO})||'%'
		           AND UPPER(T1.APNONM) LIKE '%'||UPPER(#{APNONM})||'%'
                 ORDER BY T1.APNO, T1.APNONM
        ) R
        -->
     	SELECT ROWNUM AS NO, R.* 
          FROM (SELECT T1.APNO, T1.APNONM, T1.KINDCD, T1.ITEM,
                       (SELECT KINDCD || ' - ' || KINDNM || ' (' || DESCR || ')' 
                          FROM XM000 
                         WHERE COMPANYCD = T1.COMPANYCD
                         and   KINDCD = T1.KINDCD) AS KIND_INFO 
                  FROM PREMIER_QMS.XM010 T1
                 WHERE T1.USEYN = 'Y'
                     AND UPPER(T1.APNO) LIKE '%'||UPPER(#{APNO})||'%'
		           AND UPPER(T1.APNONM) LIKE '%'||UPPER(#{APNONM})||'%'
                 ORDER BY T1.APNO, T1.APNONM
        ) R
         where ROWNUM <![CDATA[<]]> 50
	</select>
	<!-- 품목(PART_GROUP) SELECT BOX -->
	<select id="selectPartGroupList" resultType="json" > 
		SELECT ITEM_NM AS "content", ITEM_NM AS "value" 
  		  FROM VIEW_PART_GROUP
	</select>
	<!-- 공장 SELECT BOX -->
	<select id="selectPlantList" parameterType="hashmap" resultType="egovMap">
		<if test="IS_ALL != null and IS_ALL !=''">
		SELECT '' VALUE, ' ' CONTENT
		  FROM DUAL
		UNION ALL 
		</if>
		SELECT R.* FROM (
		SELECT T.PLANT_CD AS VALUE, T.PLANT_NM AS CONTENT  
		  FROM PREMIER_SYS.COM_PLANT_INFO T
		 WHERE T.CMPY_SN = #{COMPANYCD}
		 ORDER BY VALUE
		) R
	</select>	
	<!-- 업체 목록 조회  -->
	<select id="selectVendList" parameterType="json"  resultType="json">
		SELECT  A.*, ROWNUM AS NO
		FROM(
		      SELECT  CMPY_SN,
		              CMPY_NM
		      FROM    COM_COMPANY_INFO
		      WHERE USE_YN = 'Y'   
		<if test="CMPY_TYPE != null and CMPY_TYPE != ''">
			    AND  CMPY_TYPE_CD = #{CMPY_TYPE}
		</if>		      
		      ORDER BY CMPY_NM
		) A
	</select> 
	<!-- 고객처 목록 조회  -->
	<select id="selectNonCustList" parameterType="json"  resultType="json">
		<!--  
		SELECT A.*, ROWNUM AS NO
		FROM(
		      SELECT  CUST_CD AS NON_CUST_CD, CUST_NM AS NON_CUST_NM
		      FROM    Q_200_CUST_MGMT
		      WHERE   USEYN = 'Y'  
		      AND	  GBN = #{GBN}
		      <if test="UTIL_CD != null and UTIL_CD != ''">
			   AND 	CUST_CD LIKE '%'||#{UTIL_CD}||'%' 
			  </if>
			  <if test="UTIL_NM != null and UTIL_NM != ''">
			   AND 	CUST_NM LIKE '%'||#{UTIL_NM}||'%'
			  </if>
		      
		) A
		--> 
		SELECT T.*, ROWNUM AS NO 
		FROM 
		(
             SELECT TO_CHAR(MGMT.CODE_SEQ) AS CODESEQ, MGMT.MGT1 AS MGT1, MGMT.MGT2 AS MGT2, 
                    TO_CHAR(MGMT.CODE_SEQ_UP) AS CODESEQUP, 
                    TO_CHAR(MGMT.CODE_ORDERNO) AS CODEORDERNO, 
                    MGMT.ACTIVE_FLAG AS ACTIVEFLAG, LANG.CODE_SEQ_LANG AS CODESEQLANG, LANG.CODE_NAME AS CODENAME,
                    TO_CHAR(MGMT.CODE_SEQ) AS VALUE, LANG.CODE_NAME AS CONTENT,
                    TO_CHAR(MGMT.CODE_SEQ) AS "value", LANG.CODE_NAME AS "content"
             FROM PREMIER_SYS.SYS_ITGR_CODE_MGMT MGMT, PREMIER_SYS.SYS_ITGR_CODE_LANG LANG
             WHERE MGMT.CODE_SEQ = LANG.CODE_SEQ
             AND MGMT.ACTIVE_FLAG = 'A'
             AND LANG.CODE_SEQ_LANG = #{lang}
             AND MGMT.CODE_SEQ_UP = #{CODE_SEQ}
             <if test="UTIL_CD != null and UTIL_CD != ''">
             AND MGMT.MGT1 LIKE '%'||#{UTIL_CD}||'%'
             </if> 
             <if test="UTIL_NM != null and UTIL_NM != ''">
             AND LANG.CODE_NAME LIKE '%'||#{UTIL_NM}||'%'
             </if> 
             ORDER BY MGMT.CODE_ORDERNO
		) T
	</select>
	<!-- 고객처 목록 조회(콤보) -->  
	<select id="selectNonCustCombo" parameterType="json" resultType="json">
		SELECT T.*, ROWNUM AS NO 
		FROM 
		(
             SELECT TO_CHAR(MGMT.CODE_SEQ) AS CODESEQ, MGMT.MGT1 AS MGT1, MGMT.MGT2 AS MGT2, 
                    TO_CHAR(MGMT.CODE_SEQ_UP) AS CODESEQUP, 
                    TO_CHAR(MGMT.CODE_ORDERNO) AS CODEORDERNO, 
                    MGMT.ACTIVE_FLAG AS ACTIVEFLAG, LANG.CODE_SEQ_LANG AS CODESEQLANG, LANG.CODE_NAME AS CODENAME,
                    TO_CHAR(MGMT.CODE_SEQ) AS "id", LANG.CODE_NAME AS "value"
             FROM PREMIER_SYS.SYS_ITGR_CODE_MGMT MGMT, PREMIER_SYS.SYS_ITGR_CODE_LANG LANG
             WHERE MGMT.CODE_SEQ = LANG.CODE_SEQ
             AND MGMT.ACTIVE_FLAG = 'A'
             AND LANG.CODE_SEQ_LANG = #{lang}
             AND MGMT.CODE_SEQ_UP = #{CODE_SEQ}
             <if test="UTIL_CD != null and UTIL_CD != ''">
             AND MGMT.MGT1 LIKE '%'||#{UTIL_CD}||'%'
             </if> 
             <if test="UTIL_NM != null and UTIL_NM != ''">
             AND LANG.CODE_NAME LIKE '%'||#{UTIL_NM}||'%'
             </if> 
             ORDER BY MGMT.CODE_ORDERNO
		) T
	</select>
	<select id="selectTopCompanyList" resultType="egovMap">
	    SELECT CMPY_SN AS VALUE, CMPY_NM AS CONTENT 
		  FROM COM_COMPANY_INFO 
		 WHERE USE_YN = 'Y'
		   AND CMPY_TYPE_CD = 'A'
		 ORDER BY VALUE
	</select>
	
	<!-- 조직도 목록 조회 (트리그리드)-->
	<select id="selectOrganizationList" parameterType="hashmap" resultType="com.dbvalley.premier.common.vo.OrganizationVO">
		SELECT T2.*
		FROM (
		    SELECT DISTINCT T.*
		    FROM (
		            SELECT EMP_CODE AS ID, CODE AS SEQ,  TYPE_CD AS TYPE, EMP_NAME AS NAME, EMP_NAME2 AS ORIGINNM, POS, DUTY, DECODE(ORGCODE,'ROOT','','0000000000','',ORGCODE) AS PARENT, LEVEL AS DEPTH,
		            <![CDATA['<button type="button" onclick="attachItem('''||EMP_CODE||''');" class="btn btn-outline-secondary btn-sm grid-btn">추가</button>' as ATTACHBTN,]]>
		            	   PST_NM as pstNm, RSP_NM as rspNm, DEPT_NM as deptNm,
		            <![CDATA['<button type="button" onclick="removeItem('''||EMP_CODE||''');" class="btn btn-outline-secondary btn-sm grid-btn">삭제</button>' as REMOVEBTN]]>
		                 , acc_no as accNo, cmpy_sn as cmpySn, dept_sn as deptSn
		            FROM (
		                    SELECT DEPT_IF_CD AS EMP_CODE, 
		                           DEPT_SN AS CODE,
		                           'D' AS TYPE_CD,
		                           DECODE(#{lang}, 'KOR', DEPT_NM, DEPT_NM_ENG) AS EMP_NAME, 
		                           DECODE(#{lang}, 'KOR', DEPT_NM, DEPT_NM_ENG) AS EMP_NAME2,
		                           '' AS POS, 
		                           '' AS DUTY, 
		                           UP_DEPT_IF_CD  AS ORGCODE,
		                           '' AS PST_NM,
                                   '' AS RSP_NM,
                                   DECODE(#{lang}, 'KOR', DEPT_NM, DEPT_NM_ENG) AS DEPT_NM
                                 , '' as acc_no, cmpy_sn, dept_sn
		                    FROM COM_DEPT_INFO
		                    WHERE (USE_YN = 'Y' OR USE_YN = '0000000898')
		                    <if test='searchcmpytypecd != "B"'>
		                    	AND CMPY_SN = #{cmpysn}
		                    </if>
		                      
		                    UNION ALL
		                    SELECT  B.ACC_NO||'^' || B.ACC_ID ||'^' || B.CMPY_SN ||'^' || B.DEPT_SN ||
		                            '^' || DECODE(#{lang}, 'KOR', B.PST_NM, B.PST_NM_ENG) || '^' || DECODE(#{lang}, 'KOR', B.RSP_NM, B.RSP_NM_ENG) || 
		                            '^' || (SELECT DECODE(#{lang}, 'KOR', DEPT_NM, DEPT_NM_ENG) FROM COM_DEPT_INFO WHERE DEPT_SN = B.DEPT_SN) ||
		                            '^' ||(SELECT DECODE(#{lang}, 'KOR', CMPY_NM, CMPY_NM_ENG) FROM COM_COMPANY_INFO WHERE CMPY_SN = B.CMPY_SN) ||
		                            '^' || '' || '^' || '' || '^' || '' AS EMP_CODE,
		                            B.ACC_NO AS CODE,
		                            'U' AS TYPE_CD,
		                            DECODE( #{lang}, 'KOR', NVL2(PST_NM, '[' || PST_NM || ']', PST_NM) || NM_KOR || NVL2(RSP_NM, '(' || RSP_NM || ')', RSP_NM) , NVL2(PST_NM_ENG, '[' || PST_NM_ENG || ']', PST_NM_ENG) || NM_ENG || NVL2(RSP_NM_ENG, '(' || RSP_NM_ENG || ')', RSP_NM_ENG) ) AS EMP_NAME,
		                            DECODE( #{lang}, 'KOR', NM_KOR, NM_ENG) AS EMP_NAME2,
		                            PST_CD AS POS, 
		                            RSP_CD AS DUTY, 
		                            (SELECT DEPT_IF_CD FROM COM_DEPT_INFO WHERE DEPT_SN = B.DEPT_SN) ORGCODE,
		                            PST_NM,
                                    RSP_NM,
                                    (SELECT DECODE(#{lang}, 'KOR', DEPT_NM, DEPT_NM_ENG) FROM COM_DEPT_INFO WHERE DEPT_SN = B.DEPT_SN) DEPT_NM
                                  , b.acc_no, b.cmpy_sn, b.dept_sn
		                    FROM COM_USER_INFO B
		                    WHERE B.ACC_ACTIVE = 'Y'
		                        AND (NM_KOR LIKE '%'||#{searchKeyword}||'%' OR NM_ENG LIKE '%'||#{searchKeyword}||'%' )
		                    <if test='searchcmpytypecd != "B"'>
		                    	AND CMPY_SN = #{cmpysn}
		                    </if>
		                  ) X
		            <choose>
		            	<when test='searchcmpytypecd == "B"'>
		            START WITH X.EMP_CODE IN (SELECT CMPY_IF_CD FROM COM_COMPANY_INFO WHERE CMPY_TYPE_CD = 'B' )	
		            	</when>
		            	<otherwise>
		            START WITH X.EMP_CODE = (SELECT CMPY_IF_CD FROM COM_COMPANY_INFO WHERE CMPY_SN = #{cmpysn} )	
		            	</otherwise>
		            </choose>
		            
		            CONNECT BY PRIOR X.EMP_CODE = X.ORGCODE
		            ORDER SIBLINGS BY X.POS
		    ) T
		    START WITH T.ID LIKE '%^%'
		    CONNECT BY PRIOR T.PARENT = T.ID
		) T2
		<choose>
			<when test='searchcmpytypecd == "B"'>
		START WITH T2.ID IN (SELECT CMPY_IF_CD FROM COM_COMPANY_INFO WHERE CMPY_TYPE_CD = 'B' )	
			</when>
			<otherwise>
		START WITH T2.ID = (SELECT CMPY_IF_CD FROM COM_COMPANY_INFO WHERE CMPY_SN = #{cmpysn} )	
			</otherwise>
		</choose>
		
		CONNECT BY PRIOR T2.ID = T2.PARENT
	</select>
	
	<!-- 전체 공장 SELECT BOX -->
	<select id="selectAllPlantList" parameterType="hashmap" resultType="egovMap">
		SELECT T.PLANT_CD AS VALUE, T.PLANT_NM AS CONTENT  
		  FROM PREMIER_SYS.COM_PLANT_INFO T
		 WHERE 1=1
		 ORDER BY VALUE
	</select>
	
	<!-- SAP기준코드로 업체 목록 조회  -->
	<select id="selectCmpVendList" parameterType="json"  resultType="json">
		SELECT  A.*, ROWNUM AS NO
		FROM(
		      SELECT  CMPY_CD,
		              CMPY_NM
		      FROM    COM_COMPANY_INFO
		      WHERE USE_YN = 'Y'   
		<if test="S_COMP_CD != null and S_COMP_CD != ''">
			   AND 	MGT_CMPY_SN  = #{S_COMP_CD}
		</if>		      
		      ORDER BY CMPY_NM
		) A
	</select>
	
	<!-- QMS 제품군 조회 -->
	<select id="selectQMSProductList" parameterType="json" resultType="json">
		SELECT ROWNUM AS RNO, X.*
		FROM (
		      SELECT DISTINCT PART_GROUP, PART_GROUP_NM AS ATTR1, ASSY_GROUP, ASSY_GROUP_NM AS ATTR2
		      FROM XM010_GROUP A
		      ORDER BY PART_GROUP, ASSY_GROUP
		     ) X
		WHERE 1=1
		AND   UPPER(ATTR1) LIKE '%'||UPPER(#{UTIL_ATTR1})||'%'
		AND   UPPER(ATTR2) LIKE '%'||UPPER(#{UTIL_ATTR2})||'%'
	</select>
	
	<!-- QMS 품목군 조회 -->
	<select id="selectQMSItemList" parameterType="json" resultType="json">
		SELECT ROWNUM AS RNO, X.*
		FROM (
		      SELECT DISTINCT PART_GROUP, PART_GROUP_NM AS ATTR1
		      FROM XM010_GROUP A
		      ORDER BY PART_GROUP
		     ) X
		WHERE 1=1
		AND   UPPER(ATTR1) LIKE '%'||UPPER(#{UTIL_ATTR1})||'%' 
	</select>
	
	<!-- QMS EO 조회 -->
	<select id="selectQMSEoList" parameterType="json" resultType="json">
		SELECT ROWNUM AS RNO, X.*
		FROM (
		      SELECT ROW_NUMBER() OVER(PARTITION BY A.EO_NO ORDER BY A.EO_DATE DESC) RN,
		      		 PREMIER_SYS.GET_ITGR_CODE_NAME(EO_TYPE, #{lang}) EO_TYPE_NM,
		             A.*
		      FROM ERP_EO A
		      WHERE COMPANYCD = #{COMPANYCD}
		      AND   EO_DATE BETWEEN REPLACE(#{SDATE},'-','') AND REPLACE(#{EDATE},'-','')
		      AND   EO_NO LIKE '%'||UPPER(#{EONO})||'%'
		      AND	CAR_NAME LIKE '%'||UPPER(#{CAR_NAME})||'%'
		      ORDER BY EO_DATE DESC, EO_NO
		     ) X
		WHERE RN = 1
	</select>
	
	<!-- 카타로그 조회 -->
	<select id="getQmsComboList" parameterType="json" resultType="egovMap">
		<if test='IS_ALL != null and IS_ALL == "true"'>
		SELECT '' CODESEQ, '' MGT1, '' MGT2, '' CODESEQUP, '' CODEORDERNO, '' ACTIVEFLAG, '' CODESEQLANG, '' CODENAME, '' VALUE, ' ' CONTENT
		  FROM DUAL
		UNION ALL 
		</if>
		SELECT T.* FROM (
		SELECT TO_CHAR(MGMT.CODE_SEQ) AS CODESEQ, MGMT.MGT1 AS MGT1, MGMT.MGT2 AS MGT2, 
		       TO_CHAR(MGMT.CODE_SEQ_UP) AS CODESEQUP, 
		       TO_CHAR(MGMT.CODE_ORDERNO) AS CODEORDERNO, 
		       MGMT.ACTIVE_FLAG AS ACTIVEFLAG, LANG.CODE_SEQ_LANG AS CODESEQLANG, LANG.CODE_NAME AS CODENAME,
		       <choose>
		       	<when test='IS_MGT1 != null and IS_MGT1 == "true"'>
		       		MGMT.MGT1 AS VALUE,
		       	</when>
		       	<otherwise>
		       		TO_CHAR(MGMT.CODE_SEQ) AS VALUE, 
		       	</otherwise>
		       </choose> 
		       LANG.CODE_NAME AS CONTENT
		FROM PREMIER_SYS.SYS_ITGR_CODE_MGMT MGMT, PREMIER_SYS.SYS_ITGR_CODE_LANG LANG
		WHERE MGMT.CODE_SEQ = LANG.CODE_SEQ
		  <if test="IS_ACTIVE == null or IS_ACTIVE == ''">
		  AND MGMT.ACTIVE_FLAG = 'A'
		  </if>
		  AND LANG.CODE_SEQ_LANG = #{lang}
		  AND MGMT.CODE_SEQ_UP = #{codeseq}
		  <if test="mgt1 != null and mgt1 != ''">
		  AND MGMT.MGT1 = #{mgt1}
		  </if>
		  <if test="mgt2 != null and mgt2 != ''">
		  AND MGMT.MGT2 = #{mgt2}
		  </if>
		ORDER BY MGMT.CODE_ORDERNO) T
	</select>
	
</mapper>