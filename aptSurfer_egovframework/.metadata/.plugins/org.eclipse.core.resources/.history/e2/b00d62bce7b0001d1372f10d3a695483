<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dbvalley.premier.scm1.kqis9030.mapper.Kqis9030Mapper">
	
   <resultMap type="json" id="resultMap">
     <result property="EO_NO" column="EO_NO" jdbcType="VARCHAR"/>
     <result property="EO_DATE" column="EO_DATE" jdbcType="VARCHAR"/>
     <result property="DOCUMENT_NO" column="DOCUMENT_NO" jdbcType="VARCHAR"/>
     <result property="DOCUMENT_DATE" column="DOCUMENT_DATE" jdbcType="VARCHAR"/>
     <result property="KINDCD" column="KINDCD" jdbcType="VARCHAR"/>
     <result property="PARTNO" column="PARTNO" jdbcType="VARCHAR"/>
     <result property="PARTNAME" column="PARTNAME" jdbcType="VARCHAR"/>
     <result property="COMPANYCD" column="COMPANYCD" jdbcType="VARCHAR"/>
     <result property="EO_REV" column="EO_REV" jdbcType="VARCHAR"/>
     <result property="EO_TITLE" column="EO_TITLE" jdbcType="VARCHAR"/>
     <result property="EO_ACCEPT_DATE" column="EO_ACCEPT_DATE" jdbcType="VARCHAR"/>
     <result property="EO_APPLY_DATE" column="EO_APPLY_DATE" jdbcType="VARCHAR"/>
     <result property="PARTNO_REV" column="PARTNO_REV" jdbcType="VARCHAR"/>
     <result property="CUSTOMER" column="CUSTOMER" jdbcType="VARCHAR"/>
     <result property="CUSTOMER_ETC" column="CUSTOMER_ETC" jdbcType="VARCHAR"/>
     <result property="DRAWING" column="DRAWING" jdbcType="VARCHAR"/>
     <result property="DESIGN_CHANGE" column="DESIGN_CHANGE" jdbcType="VARCHAR"/>
     <result property="DIE_CHANGE" column="DIE_CHANGE" jdbcType="VARCHAR"/>
     <result property="JIG_CHANGE" column="JIG_CHANGE" jdbcType="VARCHAR"/>
     <result property="AMT_CHANGE" column="AMT_CHANGE" jdbcType="VARCHAR"/>
     <result property="MATERIAL_CHANGE" column="MATERIAL_CHANGE" jdbcType="CLOB" javaType="java.lang.String"/>
     <result property="AS_COMPATIBLE" column="AS_COMPATIBLE" jdbcType="VARCHAR"/>
     <result property="RATE" column="RATE" jdbcType="VARCHAR"/>
     <result property="APPLY_REQ" column="APPLY_REQ" jdbcType="VARCHAR"/>
     <result property="SPECIAL" column="SPECIAL" jdbcType="VARCHAR"/>
     <result property="ACTION" column="ACTION" jdbcType="VARCHAR"/>
     <result property="ISIR_DATE" column="ISIR_DATE" jdbcType="VARCHAR"/>
     <result property="APPROVAL_YN" column="APPROVAL_YN" jdbcType="VARCHAR"/>
     <result property="EC_REASON" column="EC_REASON" jdbcType="VARCHAR"/>
     <result property="BEFORE" column="BEFORE" jdbcType="CLOB" javaType="java.lang.String"/>
     <result property="AFTER" column="AFTER" jdbcType="CLOB" javaType="java.lang.String"/>
     <result property="DD_TEAMCD" column="DD_TEAMCD" jdbcType="VARCHAR"/>
     <result property="DD_XUSER" column="DD_XUSER" jdbcType="VARCHAR"/>    
     <result property="DOC_ID" column="DOC_ID" jdbcType="VARCHAR"/>
     <result property="EO_APPLY_PLAN_DATE" column="EO_APPLY_PLAN_DATE" jdbcType="VARCHAR"/>    
   </resultMap>
	
	
	<select id="kqis9030List" parameterType="json" resultMap="resultMap">
	    select  *      
		from    q_770 a     
		where   a.companycd =  #{COMPANYCD} 
		<if test="EO_NO != null and EO_NO != ''">	       
		and     a.EO_NO = #{EO_NO}
		</if>
	    <if test="KINDCD != null and KINDCD != ''">	  
	     and a.KINDCD =  nvl(#{KINDCD}, KINDCD)   
	    </if> 
	    <if test="PARTCD != null and PARTCD != ''">	  
	     and a.PARTCD =  nvl(#{PARTCD}, PARTCD)   
	    </if> 		    	  
	    order by a.EO_NO desc    
     </select>     
     
    
    <insert id="insertkqis9030" parameterType="json">
		<selectKey resultType="string" keyProperty="EO_REV" order="BEFORE">
			<choose>
				<when test="EO_REV != null and EO_REV != ''">
					SELECT #{EO_REV} AS EO_REV FROM DUAL	
				</when>
				<otherwise>										 
					SELECT nvl(max(EO_REV), 0) + 1 as s 
					FROM q_770 T
					WHERE T.COMPANYCD = #{COMPANYCD} 	
					AND T.EO_NO = #{EO_NO}
				</otherwise>
			</choose>
        </selectKey>
        		 				
		INSERT INTO Q_770 A (A.COMPANYCD, A.EO_NO, A.EO_REV, A.EO_DATE, A.EO_APPLY_DATE, A.PARTNO,
							 A.PARTNAME, A.KINDCD, A.CUSTOMER, A.DRAWING, A.BEFORE, A.AFTER,
							 A.DIE_CHANGE, A.APPROVAL_YN, A.DOCUMENT_NO, A.DOCUMENT_DATE, A.DD_TEAMCD, 
							 A.DD_XUSER, A.EC_REASON, A.LOGIN_COMPANYCD, A.LOGIN_YMD)
				VALUES(#{COMPANYCD}, #{EO_NO}, #{EO_REV}, #{EO_DATE}, #{EO_APPLY_DATE}, #{PARTNO}, 
						#{PARTNAME}, #{KINDCD}, PREMIER_SYS.GET_ITGR_CODE_MGT(#{CUSTOMER},#{LANG},1), #{DRAWING}, #{BEFORE, jdbcType=CLOB}, #{AFTER, jdbcType=CLOB},   
						#{DIE_CHANGE}, #{APPROVAL_YN}, #{DOCUMENT_NO}, #{DOCUMENT_DATE}, #{DD_TEAMCD}, 
						#{DD_XUSER}, PREMIER_SYS.GET_ITGR_CODE_MULTI(#{EC_REASON},#{LANG}), #{COMPANYCD}, SYSDATE)				 			
				 				
	</insert>
	
	<update id="updatekqis9030" parameterType="json">				  
		UPDATE  Q_770 A 
        SET ,A.EO_DATE = REPLACE(#{EO_DATE},'-','')          
            ,A.EO_APPLY_DATE = REPLACE(#{EO_APPLY_DATE},'-','')
            ,A.PARTNO = #{PARTNO}
            ,A.PARTNAME = #{PARTNAME}        
            ,A.KINDCD = #{KINDCD}
            ,A.CUSTOMER = PREMIER_SYS.GET_ITGR_CODE_MGT(#{CUSTOMER},#{LANG},1)          
            ,A.DRAWING = #{DRAWING}
            ,A.DIE_CHANGE = #{DIE_CHANGE}            
            ,A.APPROVAL_YN = #{APPROVAL_YN}		            
            ,A.BEFORE = #{BEFORE, jdbcType=CLOB}
            ,A.AFTER = #{AFTER, jdbcType=CLOB}
            ,A.DOCUMENT_NO = #{DOCUMENT_NO}
            ,A.DOCUMENT_DATE = REPLACE(#{DOCUMENT_DATE},'-','')
            ,A.DD_TEAMCD = #{DD_TEAMCD}
            ,A.DD_XUSER = #{DD_XUSER}	
            ,A.EC_REASON = PREMIER_SYS.GET_ITGR_CODE_MULTI(#{EC_REASON},#{LANG})      
            ,A.LOGIN_COMPANYCD = #{COMPANYCD}		            
            ,A.LOGIN_YMD = SYSDATE 
	</update>
	 
   	<update id="setkqis9030" parameterType="json">
   		<selectKey resultType="string" keyProperty="EO_REV" order="BEFORE">
			<choose>
				<when test="EO_REV != null and EO_REV != ''">
					SELECT #{EO_REV} AS EO_REV FROM DUAL	
				</when>
				<otherwise>										 
					SELECT nvl(max(EO_REV), 0) + 1 as s 
					FROM q_770 T
					WHERE T.COMPANYCD = #{COMPANYCD} 	
					AND T.EO_NO = #{EO_NO}
				</otherwise>
			</choose>
        </selectKey>
   	
   		MERGE INTO Q_770 A USING (
		SELECT #{COMPANYCD} AS COMPANYCD
		      ,#{EO_NO} AS EO_NO
		      ,#{EO_REV} AS EO_REV      
		      ,replace(#{EO_DATE},'-','') AS EO_DATE      
		      ,replace(#{EO_APPLY_DATE},'-','') AS EO_APPLY_DATE
		      ,#{PARTNO} AS PARTNO
		      ,#{PARTNAME} AS PARTNAME      
		      ,#{KINDCD} AS KINDCD
		      ,#{CUSTOMER} AS CUSTOMER		     
		      ,#{DRAWING} AS DRAWING
		     
		      ,#{DIE_CHANGE} AS DIE_CHANGE      
		      ,#{APPROVAL_YN} AS APPROVAL_YN		      
		      
		      ,#{DOCUMENT_NO} AS DOCUMENT_NO
		      ,replace(#{DOCUMENT_DATE},'-','') AS DOCUMENT_DATE
		      ,#{DD_TEAMCD} AS DD_TEAMCD
		      ,#{DD_XUSER} AS DD_XUSER		      
		      ,#{COMPANYCD} AS LOGIN_COMPANYCD		      
		      ,SYSDATE AS LOGIN_YMD
		      
		FROM DUAL ) D
		ON (A.COMPANYCD = D.COMPANYCD
		AND A.EO_NO = D.EO_NO
		AND A.EO_REV = D.EO_REV
		)
		WHEN MATCHED THEN
		  UPDATE SET
		            ,A.EO_DATE = D.EO_DATE            
		            ,A.EO_APPLY_DATE = D.EO_APPLY_DATE
		            ,A.PARTNO = D.PARTNO
		            ,A.PARTNAME = D.PARTNAME            
		            ,A.KINDCD = D.KINDCD
		            ,A.CUSTOMER = D.CUSTOMER		            
		            ,A.DRAWING = D.DRAWING
		            
		            ,A.DIE_CHANGE = D.DIE_CHANGE            
		            ,A.APPROVAL_YN = D.APPROVAL_YN		            
		            
		            ,A.DOCUMENT_NO = D.DOCUMENT_NO
		            ,A.DOCUMENT_DATE = D.DOCUMENT_DATE
		            ,A.DD_TEAMCD = D.DD_TEAMCD
		            ,A.DD_XUSER = D.DD_XUSER		            
		            ,A.LOGIN_COMPANYCD = D.LOGIN_COMPANYCD		            
		            ,A.LOGIN_YMD = D.LOGIN_YMD
		            
		WHEN NOT MATCHED THEN
		INSERT(A.COMPANYCD, A.EO_NO, A.EO_REV, A.EO_DATE, A.EO_APPLY_DATE, A.PARTNO, A.PARTNAME, A.KINDCD, A.CUSTOMER, A.DRAWING,  A.DIE_CHANGE, A.APPROVAL_YN, A.DOCUMENT_NO, A.DOCUMENT_DATE, A.DD_TEAMCD, A.DD_XUSER, A.LOGIN_COMPANYCD, A.LOGIN_YMD)
		VALUES(D.COMPANYCD, D.EO_NO, D.EO_REV, D.EO_DATE, D.EO_APPLY_DATE, D.PARTNO, D.PARTNAME, D.KINDCD, D.CUSTOMER, D.DRAWING,  D.DIE_CHANGE, D.APPROVAL_YN, D.DOCUMENT_NO, D.DOCUMENT_DATE, D.DD_TEAMCD, D.DD_XUSER, D.LOGIN_COMPANYCD, D.LOGIN_YMD)

  
     </update>
     
    <update id="setkqis9030Subject" parameterType="json">   		
		
		MERGE INTO Q_771 A USING (
		SELECT #{COMPANYCD} AS COMPANYCD
		      ,#{EO_NO} AS EO_NO
		      ,#{EO_REV} AS EO_REV
		      ,#{SUBJECT} AS SUBJECT
		      ,'Y' AS USEYN
		      ,#{COMPANYCD} AS LOGIN_COMPANYCD
		      ,#{ACCNO} AS LOGIN_ID
		      ,SYSDATE AS LOGIN_YMD
		FROM DUAL ) D
		ON (A.COMPANYCD = D.COMPANYCD
		AND A.EO_NO = D.EO_NO
		AND A.EO_REV = D.EO_REV
		AND A.SUBJECT = D.SUBJECT
		)
		WHEN MATCHED THEN
		  UPDATE SET A.USEYN = 'Y'
		            ,A.LOGIN_COMPANYCD = D.LOGIN_COMPANYCD	
		            ,A.LOGIN_ID = D.LOGIN_ID	            
		            ,A.LOGIN_YMD = D.LOGIN_YMD
		WHEN NOT MATCHED THEN
		INSERT(A.COMPANYCD, A.EO_NO, A.EO_REV, A.SUBJECT, A.USEYN, A.LOGIN_COMPANYCD, A.LOGIN_ID, A.LOGIN_YMD)
		VALUES(D.COMPANYCD, D.EO_NO, D.EO_REV, D.SUBJECT, D.USEYN, D.LOGIN_COMPANYCD, D.LOGIN_ID, D.LOGIN_YMD)                                             
		     
     </update> 
     
     
     <update id="setkqis9030SubjectDtl" parameterType="json"> 
      <selectKey resultType="string" keyProperty="SNO" order="BEFORE">
			<choose>
				<when test="SNO != null and SNO != ''">
					SELECT #{SNO} AS SNO FROM DUAL	
				</when>
				<otherwise>		
					select    nvl(max(SNO), 0) + 1   as s    
                    from      q_772      
                    where     COMPANYCD = #{COMPANYCD}      
                    and       EO_NO = #{EO_NO}
                    and       EO_REV = #{EO_REV}
                    and       SUBJECT = #{SUBJECT}		                    						 
				</otherwise>
			</choose>
        </selectKey>  		
		MERGE INTO Q_772 A USING (
		SELECT #{COMPANYCD} AS COMPANYCD
		      ,#{EO_NO} AS EO_NO
		      ,#{EO_REV} AS EO_REV
		      ,#{SUBJECT} AS SUBJECT
		      ,#{SNO} AS SNO
		      ,#{TITLE} AS TITLE
		      ,to_date(replace(#{EFFECT_DATE},'-',''), 'yyyymmdd') AS EFFECT_DATE
		      ,#{COMPANYCD} AS LOGIN_COMPANYCD
		      ,#{ACCNO} AS LOGIN_ID
		      ,SYSDATE AS LOGIN_YMD
		FROM DUAL ) D
		ON (A.COMPANYCD = D.COMPANYCD
		AND A.EO_NO = D.EO_NO
		AND A.EO_REV = D.EO_REV
		AND A.SUBJECT = D.SUBJECT
		AND A.SNO = D.SNO
		)
		WHEN MATCHED THEN
		  UPDATE SET A.TITLE = D.TITLE
		            ,A.EFFECT_DATE = D.EFFECT_DATE
		            ,A.LOGIN_COMPANYCD = D.LOGIN_COMPANYCD
		            ,A.LOGIN_ID = D.LOGIN_ID
		            ,A.LOGIN_YMD = D.LOGIN_YMD
		WHEN NOT MATCHED THEN
		INSERT(A.COMPANYCD, A.EO_NO, A.EO_REV, A.SUBJECT, A.SNO, A.TITLE, A.EFFECT_DATE, A.LOGIN_COMPANYCD, A.LOGIN_ID, A.LOGIN_YMD)
		VALUES(D.COMPANYCD, D.EO_NO, D.EO_REV, D.SUBJECT, D.SNO, D.TITLE, D.EFFECT_DATE, D.LOGIN_COMPANYCD, D.LOGIN_ID, D.LOGIN_YMD)


     </update>     
     
   	<delete id="delkqis9030" parameterType="json">      
	delete from    q_770      
     where COMPANYCD = #{COMPANYCD}
     and   eo_no = #{EO_NO}
     and   eo_rev = #{EO_REV}
    </delete>
    
    <delete id="delkqis9030Subject" parameterType="json">      
	delete from q_771	
      where   COMPANYCD = #{COMPANYCD}
      and       EO_NO = #{EO_NO}
    </delete>
    <delete id="delkqis9030SubjectDtl" parameterType="json">      
	delete from q_772	
      where   COMPANYCD = #{COMPANYCD}
      and       EO_NO = #{EO_NO}
    </delete>
</mapper>