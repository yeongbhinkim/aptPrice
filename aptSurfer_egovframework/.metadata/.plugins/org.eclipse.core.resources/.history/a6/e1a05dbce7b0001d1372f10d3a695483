<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dbvalley.premier.common.dev.mapper.GridMapper">

	<select id="selectDevGridMaster" parameterType="egovMap" resultType="com.dbvalley.premier.common.dev.vo.GridMasterVO">
		select a.menuseq as menuSeq
		     , a.grid_code as gridCode 
		     , a.grid_remark as gridRemark
		     , a.header_row_count as headerRowCount
		     , a.footer_row_count as footerRowCount
		     , a.header_row_height as headerRowHeight
		     , a.footer_row_height as footerRowHeight
		     , a.width
		     , a.height
		     , a.auto_Width as autoWidth
		     , a.resizable
		     , a.selection
		     , a.columns_auto_width as columnsAutoWidth
		     , a.sortable as sortable
		     , a.split_at as splitAt
		     , a.row_height as rowHeight
		     , a.editable
		     , a.auto_empty_row as autoEmptyRow
		     , a.drag_mode as dragMode
		     , a.drag_copy as dragCopy
		     , a.css
		     , a.row_css as rowCss
		     , a.controller
		from premier_sys.dev_grid_master a
		where a.menuseq = #{menuSeq}
		<if test="gridCode != null and gridCode != ''">
	      AND a.grid_code = #{gridCode}
	    </if>
		order by a.menuseq, a.grid_code
	</select>
	
	<update id="setDevGridMaster" parameterType="hashmap">
		MERGE INTO premier_sys.dev_grid_master A USING (
			SELECT to_number(#{menuSeq}) as menuSeq
				 , #{gridCode}as gridCode
				 , #{gridRemark} as gridRemark
				 , #{headerRowCount} as headerRowCount 
				 , #{footerRowCount} as footerRowCount
				 , #{headerRowHeight} as headerRowHeight
				 , #{footerRowHeight} as footerRowHeight
				 , #{width} as width
				 , #{height} as height
				 , #{autoWidth} as autoWidth
				 , #{resizable} as resizable
				 , #{selection} as selection
				 , #{columnsAutoWidth} as columnsAutoWidth
				 , #{sortable} as sortable
				 , #{splitAt} as splitAt
				 , #{rowHeight} as rowHeight
				 , #{editable} as editable
				 , #{autoEmptyRow} as autoEmptyRow
				 , #{dragMode} as dragMode
				 , #{dragCopy} as dragCopy
				 , #{css} as css
				 , #{rowCss} as rowCss
				 , #{controller} as controller
				 , #{htmlEnable} as htmlEnable
			 FROM DUAL) D
		ON(A.menuseq = D.menuSeq and A.grid_code = D.gridCode)
		WHEN MATCHED THEN
			UPDATE SET a.grid_remark = d.gridRemark
			         , a.header_row_count = d.headerRowCount
			         , a.footer_row_count = d.footerRowCount
			         , a.header_row_height = d.headerRowHeight
			         , a.footer_row_height = d.footerRowHeight
			         , a.width = d.width
			         , a.height = d.height
			         , a.auto_Width = d.autoWidth
			         , a.resizable = d.resizable
			         , a.selection = d.selection
			         , a.columns_auto_width = d.columnsAutoWidth
			         , a.sortable = d.sortable
			         , a.split_at = d.splitAt
			         , a.row_height = d.rowHeight
			         , a.editable = d.editable
			         , a.auto_empty_row = d.autoEmptyRow
			         , a.drag_mode = d.dragMode
			         , a.drag_copy = d.dragCopy
			         , a.css = d.css
			         , a.row_css = d.rowCss
			         , a.controller = d.controller
			         , a.html_enable = d.htmlEnable
		WHEN NOT MATCHED THEN
			INSERT (
				a.menuseq, a.grid_code, a.grid_remark, a.header_row_count, a.footer_row_count
		      , a.header_row_height, a.footer_row_height, a.width, a.height, a.auto_Width, a.resizable
		      , a.selection, a.columns_auto_width, a.sortable, a.split_at, a.row_height, a.editable, a.auto_empty_row
		      , a.drag_mode, a.drag_copy, a.css, a.row_css, a.controller, a.html_enable
	      	) VALUES (
	      		D.menuSeq, D.gridCode, D.gridRemark, D.headerRowCount, D.footerRowCount
		      , D.headerRowHeight, D.footerRowHeight, D.width, D.height, D.autoWidth, D.resizable
		      , D.selection, D.columnsAutoWidth, D.sortable, D.splitAt, D.rowHeight, D.editable, D.autoEmptyRow
		      , D.dragMode, D.dragCopy, D.css, D.rowCss, D.controller, D.htmlEnable
	      	)
	</update>
	
	<delete id="deleteDevGridMaster" parameterType="hashmap">
		DELETE premier_sys.dev_grid_master
		WHERE menuseq = to_number(#{menuSeq})
		  and grid_code = #{gridCode}
	</delete>
	
	<select id="selectDevGridColumn" parameterType="egovMap" resultType="com.dbvalley.premier.common.dev.vo.GridColumnVO">
		select a.menuseq as menuSeq
		     , a.grid_code as gridCode
		     , a.column_id as columnId
		     , a.width as width
		     , a.editor_type as editorType
		     , a.hidden
		     , a.resizable
		     , a.type
		     , a.date_format as dateFormat
		     , a.max_width as maxWidth
		     , a.min_width as minWidth
		     , a.mark
		     , a.template
		     , a.sortnum
		     , a.editable
		from premier_sys.dev_grid_column a
		where a.menuseq = #{menuSeq}
		  and a.grid_code = #{gridCode}
		<if test="columnId != null and columnId != ''">
	      AND a.column_id = #{columnId}
	    </if>
		order by a.sortnum
	</select>
	
	<delete id="deleteDevGridColumn" parameterType="hashmap">
		DELETE premier_sys.dev_grid_column
		WHERE menuseq = to_number(#{menuSeq})
		  and grid_code = #{gridCode}
		  and column_id = #{columnId}
	</delete>
	
	<update id="setDevGridColumn" parameterType="hashmap">
		MERGE INTO premier_sys.dev_grid_column A USING (
			SELECT to_number(#{menuSeq}) as menuSeq
				 , #{gridCode} as gridCode
				 , #{columnId} as columnId
				 , #{width} as width
				 , #{editorType} as editorType
				 , #{hidden} as hidden
				 , #{resizable} as resizable
				 , #{type} as type
				 , #{dateFormat} as dateFormat
				 , #{maxWidth} as maxWidth
				 , #{minWidth} as minWidth
				 , #{mark} as mark
				 , #{template} as template
				 , #{sortnum} as sortnum
				 , #{editable} as editable
			 FROM DUAL) D
		ON(A.menuseq = D.menuSeq and A.grid_code = D.gridCode and A.column_id = D.columnId)
		WHEN MATCHED THEN
			UPDATE SET A.width = D.width
			         , A.editor_type = D.editorType
			         , A.hidden = D.hidden
			         , A.resizable = D.resizable
			         , A.type = D.type
			         , A.date_format = D.dateFormat
			         , A.max_width = D.maxWidth
			         , A.min_width = D.minWidth
			         , A.mark = D.mark
			         , A.template = D.template
			         , A.sortnum = D.sortnum
			         , A.editable = D.editable
		WHEN NOT MATCHED THEN
			INSERT (
				a.menuseq, a.grid_code, a.column_id, a.width, a.editor_type, a.hidden, a.resizable, a.type
			  , a.date_format, a.max_width, a.min_width, a.mark, a.template, a.sortnum, a.editable
	      	) VALUES (
	      		D.menuSeq, D.gridCode, D.columnId, D.width, D.editorType, D.hidden, D.resizable, D.type
			  , D.dateFormat, D.maxWidth, D.minWidth, D.mark, D.template, D.sortnum, D.editable
	      	)
	</update>
	
	<select id="selectDevGridHeader" parameterType="egovMap" resultType="com.dbvalley.premier.common.dev.vo.GridHeaderVO">
		select a.menuseq as menuSeq
		     , a.grid_code as gridCode
		     , a.column_id as columnId
		     , a.type
		     , a.row_seq as rowSeq
		     , a.text
		     , a.content
		     , a.colspan
		     , a.rowspan
		     , a.css
		     , a.messagecode
		     , a.mark
		from premier_sys.dev_grid_header a
		where a.menuseq = #{menuSeq}
		and a.grid_code = #{gridCode}
		and a.column_id = #{columnId}
		<if test="type != null and type != ''">
	    	and a.type = #{type}
	    </if>
		order by a.menuseq, a.grid_code, a.column_id, a.row_seq
	</select>
	
	<update id="setDevGridHeader" parameterType="hashmap">
		MERGE INTO premier_sys.dev_grid_header A USING (
			SELECT to_number(#{menuSeq}) as menuSeq
				 , #{gridCode} as gridCode
				 , #{columnId} as columnId
				 , #{type} as type
				 , #{rowSeq} as rowSeq 
				 , #{text} as text
				 , #{content} as content
				 , #{colspan} as colspan
				 , #{rowspan} as rowspan
				 , #{css} as css
				 , #{messagecode} as messagecode
				 , #{mark} as mark
			 FROM DUAL) D
		ON(A.menuseq = D.menuSeq and A.grid_code = D.gridCode and A.column_id = D.columnId and A.type = D.type and A.row_seq = D.rowSeq)
		WHEN MATCHED THEN
			UPDATE SET A.text = d.text
			         , A.content = d.content
			         , A.colspan = d.colspan
			         , A.rowspan = d.rowspan
			         , A.css = d.css
			         , A.messagecode = d.messagecode
			         , A.mark = d.mark
		WHEN NOT MATCHED THEN
			INSERT (
				A.menuseq, A.grid_code, A.column_id, A.type, A.row_seq, A.text, A.content, A.colspan, A.rowspan, A.css, A.messagecode, A.mark
	      	) VALUES (
	      		D.menuSeq, D.gridCode, D.columnId, D.type, D.rowSeq, D.text, D.content, D.colspan, D.rowspan, D.css, D.messagecode, D.mark
	      	)
	</update>
	
	<delete id="deleteDevGridHeader" parameterType="hashmap">
		DELETE premier_sys.dev_grid_header
		WHERE menuseq = to_number(#{menuSeq})
		  and grid_code = #{gridCode}
		  and column_id = #{columnId}
		  and row_seq = #{rowSeq}
      	  and type = #{type}
	</delete>
	
	<select id="selectDevGridFilterConfig" parameterType="egovMap" resultType="com.dbvalley.premier.common.dev.vo.GridFilterConfigVO">
		select a.menuseq as menuSeq
		     , a.grid_code as gridCode
		     , a.column_id as columnId
		     , a.type
		     , a.row_seq as rowSeq 
		     , a.placeholder
		     , a.virtual
		     , a.readonly
		from dev_grid_filter_config a
		where a.menuseq = #{menuSeq}
		and a.grid_code = #{gridCode}
		and a.column_id = #{columnId}
		<if test="type != null and type != ''">
      	and a.type = #{type}
	    </if>
		order by a.menuseq, a.grid_code, a.column_id, a.row_seq
	</select>
	
	<select id="selectDevGridFilterConfigGridDev" parameterType="egovMap" resultType="com.dbvalley.premier.common.dev.vo.GridFilterConfigVO">
		select b.menuseq as menuSeq
		     , b.grid_code as gridCode
		     , b.column_id as columnId
		     , b.type
		     , b.row_seq as rowSeq
		     , b.placeholder
		     , b.virtual
		     , b.readonly
		from premier_sys.dev_grid_header a, premier_sys.dev_grid_filter_config b
		where a.menuseq = b.menuseq
		and a.grid_code = b.grid_code
		and a.column_id = b.column_id
		and a.type = b.type
		and a.row_seq = b.row_seq 
		and a.menuseq = #{menuSeq}
		and a.grid_code = #{gridCode}
		and a.type = #{type}
		and a.content in ('inputFilter', 'selectFilter', 'comboFilter')
		order by b.menuseq, b.grid_code, b.column_id, b.row_seq
	</select>
	
	<update id="setDevGridFilterConfig" parameterType="hashmap">
		MERGE INTO premier_sys.dev_grid_filter_config A USING (
			SELECT to_number(#{menuSeq}) as menuSeq
				 , #{gridCode} as gridCode
				 , #{columnId} as columnId
				 , #{type} as type
				 , #{rowSeq} as rowSeq 
				 , #{placeholder} as placeholder
				 , #{virtual} as virtual
				 , #{readonly} as readonly
			 FROM DUAL) D
		ON(A.menuseq = D.menuSeq and A.grid_code = D.gridCode and A.column_id = D.columnId and A.type = D.type and A.row_seq = D.rowSeq)
		WHEN MATCHED THEN
			UPDATE SET a.placeholder = d.placeholder
		             , a.virtual = d.virtual
		             , a.readonly = d.readonly
		WHEN NOT MATCHED THEN
			INSERT (
				a.menuseq
		      , a.grid_code
		      , a.column_id
		      , a.type
		      , a.row_seq
		      , a.placeholder
		      , a.virtual
		      , a.readonly
	      	) VALUES (
	      		D.menuSeq
		      , D.gridCode
		      , D.columnId
		      , D.type
		      , D.rowSeq
		      , D.placeholder
		      , D.virtual
		      , D.readonly
	      	)
	</update>
	
	<delete id="deleteDevGridFilterConfig" parameterType="hashmap">
		DELETE premier_sys.dev_grid_filter_config
		WHERE menuseq = to_number(#{menuSeq})
		  and grid_code = #{gridCode}
		  and column_id = #{columnId}
		  and row_seq = #{rowSeq}
      	  and type = #{type}
	</delete>
</mapper>